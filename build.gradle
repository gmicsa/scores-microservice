plugins {
    id 'java'
    id 'org.springframework.boot' version '2.5.6'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'com.gorylenko.gradle-git-properties' version '2.3.1'
}

group = 'gmicsa'
version = '0.0.3'
sourceCompatibility = '17'

ext {
    lombokVer = '1.18.22'
}

repositories {
    mavenCentral()
}

dependencies {
    compileOnly "org.projectlombok:lombok:$lombokVer"
    annotationProcessor "org.projectlombok:lombok:${lombokVer}"
    testCompileOnly "org.projectlombok:lombok:${lombokVer}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVer}"

    implementation 'org.hibernate:hibernate-validator:6.0.13.Final'
    implementation 'org.glassfish:javax.el:3.0.0'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

test {
    useJUnitPlatform()
}


//buildscript {
//    dependencies {
//        classpath('se.transmode.gradle:gradle-docker:1.2')
//    }
//}
//
//apply plugin: 'docker'
//
//
//task buildDocker(type: Docker, dependsOn: build) {
//    // push = true
//    applicationName = jar.baseName
//    dockerfile = file('Dockerfile')
//    doFirst {
//        copy {
//            from jar
//            into stageDir
//        }
//    }
//}
