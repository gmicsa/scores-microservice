buildscript {
    ext {
        springBootVersion = '2.0.0.M7'
    }
    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath('se.transmode.gradle:gradle-docker:1.2')
        classpath "gradle.plugin.com.gorylenko.gradle-git-properties:gradle-git-properties:1.4.17"
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'docker'
apply plugin: "com.gorylenko.gradle-git-properties"

group = 'gmicsa'
version = '0.0.1'
sourceCompatibility = 9
targetCompatibility = 9

jar {
    baseName = 'scores-microservice'
}

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
}

springBoot  {
    buildInfo()
}

dependencies {
    compile('javax.xml.bind:jaxb-api:2.3.0')
    compile('javax.el:javax.el-api:3.0.0')
    compile('org.glassfish:javax.el:3.0.0')
    compile('com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.8.6')
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-starter-data-mongodb-reactive')
    compile('org.springframework.boot:spring-boot-starter-webflux')
    runtime('org.springframework.boot:spring-boot-devtools')
    compileOnly('org.projectlombok:lombok:1.16.20')

    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('io.projectreactor:reactor-test')
    testCompile('de.flapdoodle.embed:de.flapdoodle.embed.mongo')
}

task buildDocker(type: Docker, dependsOn: build) {
    // push = true
    applicationName = jar.baseName
    dockerfile = file('Dockerfile')
    doFirst {
        copy {
            from jar
            into stageDir
        }
    }
}
